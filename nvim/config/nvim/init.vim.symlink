syntax on
filetype indent plugin on

if exists("$ZSH")
  set runtimepath+=$ZSH/nvim/runtime
endif

set exrc

set number
set relativenumber
set tabstop=2
set softtabstop=0
set expandtab
set shiftwidth=2
set smarttab
set smartindent
set lcs=tab:>-
set list
set nowrap
set autoread

set hlsearch
set incsearch
set smartcase

set hidden
set noerrorbells
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set termguicolors
set scrolloff=8
set noshowmode
set completeopt=menuone

"auto reload files, :checktime will reload the file.
"if using vim inside tmux this requires setting focus-events in your .tmux.conf with:
"set -g focus-events on
augroup tmux_integration do
  au!
  au FocusGained * :checktime
augroup END

let mapleader = " "

"move line up or down .+1 - current line +1 \ == re-indent to match area
nnoremap <silent> <leader>J :m .+1<CR>==
nnoremap <silent> <leader>K :m .-2<CR>==
"turn off highlights
nnoremap <silent> <leader>nh :noh<CR>

"move between windows
nnoremap <silent> <leader>h :wincmd h<CR>
nnoremap <silent> <leader>j :wincmd j<CR>
nnoremap <silent> <leader>k :wincmd k<CR>
nnoremap <silent> <leader>l :wincmd l<CR>

" yank to system clipboard
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y gg"+yG
nnoremap <leader>p "+p

"open new tab with file explorer
nnoremap <silent> <leader>e :Texplore<CR>
nmap <silent> <leader>pv :wincmd v<bar> :Ex<bar> :vertical resize 30<CR>

"netrw config
let g:netrw_banner = 0
let g:netrw_winsize = 25

call plug#begin(stdpath('data') . 'plugged')
Plug 'junegunn/fzf.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'vim-airline/vim-airline'
Plug 'dracula/vim', { 'as': 'dracula' }
call plug#end()

colorscheme dracula

"ctags
set tags=.git/tags;

